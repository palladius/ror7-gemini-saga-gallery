###############################################################################
# Build ENV needed:
#
# Loosely inspired by https://github.com/palladius/clouddeploy-platinum-path/blob/main/cloudbuild.yaml
# Securing builds: https://cloud.google.com/build/docs/securing-builds/use-secrets
#
# Note: to enable CB access to SecretManager, you need to click on SA permissions. Note
#       that enablibng Cloud Run required some magical additional access which Im not sure
#       how to reproduce in IAC. See https://screenshot.googleplex.com/4wEvj93LprtUdgU
###############################################################################

timeout: 600s # 10min
options:
  # supported machine types: https://cloud.google.com/build/docs/api/reference/rest/v1/projects.builds#machinetype
  #machineType: 'E2_HIGHCPU_32'
  machineType: 'N1_HIGHCPU_32'
  substitution_option: 'ALLOW_LOOSE'
  # https://cloud.google.com/build/docs/configuring-builds/substitute-variable-values#dynamic_substitutions
  dynamicSubstitutions: true
substitutions:
  #_ARTIFACT_REPO_FULL_PATH: ${_REGION}-docker.pkg.dev/${PROJECT_ID}/puffintours/myapp
  # GOB doesnt allow me to pass ENVs to CB so I need to do this :/
  # or get it from SECRET MANAGER :) https://cloud.google.com/build/docs/securing-builds/use-secrets
  _REGION: 'europe-west1'
  _GCP_REGION: 'europe-west1'
  _MY_REPO_NAME: 'ror7-gemini-saga-gallery' # This ALREADY EXISTS!
  _APP_NAME: 'saga-gallery'
  # Create this with script `iac/01-create-Artifact-Repo.sh`
  _FINAL_AR_IMAGE_WITHOUT_TAG: "${_GCP_REGION}-docker.pkg.dev/${PROJECT_ID}/${_MY_REPO_NAME}/${_APP_NAME}123"
  # OLD AND USELESS
  _MESSAGGIO_OCCASIONALE: 'on cloud build configured in aug24 and copied from PuffinTours'
  #_PROJECT_ID: puffin-tours
  #SKAFFOLD_DEFAULT_REPO: 'europe-west1-docker.pkg.dev/puffin-tours/puffintours'
  # Without AppName
  _SKAFFOLD_DEFAULT_REPO: "${_GCP_REGION}-docker.pkg.dev/${PROJECT_ID}/${_MY_REPO_NAME}"
images:
#- "europe-west1-docker.pkg.dev/ror-goldie/ror7-gemini-saga-gallery/saga-gallery:latest"
#- "europe-west1-docker.pkg.dev/ror-goldie/ror7-gemini-saga-gallery/saga-gallery:sha-$SHORT_SHA"
#- "$_FINAL_AR_IMAGE_LATEST"
- "${_FINAL_AR_IMAGE_WITHOUT_TAG}:latest"
- "${_FINAL_AR_IMAGE_WITHOUT_TAG}:sha-$SHORT_SHA"
# - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_MY_REPO_NAME}/${_APP_NAME}:latest"
#- "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_MY_REPO_NAME}/${_APP_NAME}:sha-$SHORT_SHA"

################################################################################
# TODO(ricc): enable availableSecrets as below once Cloud build is able to push again
#             (small iterations).
################################################################################
# availableSecrets:
#   secretManager:
#   - versionName: projects/${PROJECT_ID}/secrets/myapp_REGION/versions/latest
#     env: myapp_REGION
################################################################################


#############################################################
# MAIN phase: all Build steps
#############################################################
steps:

# First I build a docker latest version..
- name: 'gcr.io/cloud-builders/docker'
  id: Docker Build - to LATEST
  args: ['build', '-t', "${_FINAL_AR_IMAGE_WITHOUT_TAG}:latest", '.']
  env:
    - 'FINAL_AR_IMAGE_WITHOUT_TAG=$_FINAL_AR_IMAGE_WITHOUT_TAG'

# Then I tag it with another so it survives multiple builds..
- name: 'gcr.io/cloud-builders/docker'
  id: Tag latest to latest and sha-SHA - (TODO vVERSION scriptically)
  args:
    - 'tag'
    - "${_FINAL_AR_IMAGE_WITHOUT_TAG}:latest"
    - "${_FINAL_AR_IMAGE_WITHOUT_TAG}:sha-$SHORT_SHA"
  env:
  - 'RAILS_MASTER_KEY=$_RAILS_MASTER_KEY'

- name: 'gcr.io/cloud-builders/docker'
  id: Tag from SHA to VERSION - lets try with Docker
  entrypoint: bash
  args:
  - bin/autotag.sh
  env:
  - 'PROJECT_ID=$PROJECT_ID'
  - 'APP_NAME=$_APP_NAME'
  - 'SKAFFOLD_DEFAULT_REPO=$_SKAFFOLD_DEFAULT_REPO'
  # I believe this is silly and redundant but man - I'm despetrate
  - 'SHORT_SHA=$SHORT_SHA'
  - 'FINAL_AR_IMAGE_WITHOUT_TAG=$_FINAL_AR_IMAGE_WITHOUT_TAG'

# deploys to cloud run: https://cloud.google.com/build/docs/deploying-builds/deploy-cloud-run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'run'
  - 'deploy'
  - 'cbyaml-${_APP_NAME}-dev'
  - '--image'
  - "${_FINAL_AR_IMAGE_WITHOUT_TAG}:latest"
  - '--region'
  - "${_REGION}"
  - '--platform'
  - 'managed'
  - '--allow-unauthenticated'
  env:
  - 'APP_NAME=$_APP_NAME'
  - 'SKAFFOLD_DEFAULT_REPO=$_SKAFFOLD_DEFAULT_REPO'
  - 'FINAL_AR_IMAGE_WITHOUT_TAG=$_FINAL_AR_IMAGE_WITHOUT_TAG'
  - 'RAILS_ENV=development'


- name: 'gcr.io/cloud-builders/gcloud'
  id: Push to Cloud run from POOR Env with DB stuff..
  entrypoint: bash
  args:
  - bin/cb-push-to-cloudrun.sh
  env:
  - 'PROJECT_ID=$PROJECT_ID'
  - 'RAILS_MASTER_KEY=$_RAILS_MASTER_KEY'
  - 'DATABASE_HOST=$_DATABASE_HOST'
  - 'DATABASE_NAME=$_DATABASE_NAME'
  - 'DATABASE_USER=$_DATABASE_USER'
  - 'DATABASE_PASS=$_DATABASE_PASS'
#  - 'GCP_REGION=$GCP_REGION'
#  - 'REGION=$REGION'

