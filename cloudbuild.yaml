###############################################################################
# Build ENV needed:
#
# Loosely inspired by https://github.com/palladius/clouddeploy-platinum-path/blob/main/cloudbuild.yaml
# Securing builds: https://cloud.google.com/build/docs/securing-builds/use-secrets
#
# Note: to enable CB access to SecretManager, you need to click on SA permissions. Note
#       that enablibng Cloud Run required some magical additional access which Im not sure
#       how to reproduce in IAC. See https://screenshot.googleplex.com/4wEvj93LprtUdgU
###############################################################################

timeout: 600s # 10min
options:
  # supported machine types: https://cloud.google.com/build/docs/api/reference/rest/v1/projects.builds#machinetype
  #machineType: 'E2_HIGHCPU_32'
  machineType: 'N1_HIGHCPU_32'
  substitution_option: 'ALLOW_LOOSE'
substitutions:
  #_ARTIFACT_REPO_FULL_PATH: ${_REGION}-docker.pkg.dev/${PROJECT_ID}/puffintours/myapp
  # GOB doesnt allow me to pass ENVs to CB so I need to do this :/
  # or get it from SECRET MANAGER :) https://cloud.google.com/build/docs/securing-builds/use-secrets
  REGION: us-central1
  GCP_REGION: us-central1
  REPO_NAME: ror7-gemini-saga-gallery
  APP_NAME: saga-gallery
  #_PROJECT_ID: puffin-tours
  SKAFFOLD_DEFAULT_REPO: 'europe-west1-docker.pkg.dev/puffin-tours/puffintours'
  MESSAGGIO_OCCASIONALE: on cloud build configured in aug24 and copied from PuffinTours
images:
- "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${APP_NAME}:latest"
- "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${APP_NAME}:sha-$SHORT_SHA"

################################################################################
# TODO(ricc): enable availableSecrets as below once Cloud build is able to push again
#             (small iterations).
################################################################################
# availableSecrets:
#   secretManager:
#   - versionName: projects/${PROJECT_ID}/secrets/myapp_REGION/versions/latest
#     env: myapp_REGION
################################################################################


#############################################################
# MAIN phase: all Build steps
#############################################################
steps:

# First I build a docker latest version..
- name: 'gcr.io/cloud-builders/docker'
  id: Docker Build - to CB_LATEST # might be error prone vs the one create from computer
  args: ['build', '-t', "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${APP_NAME}:latest", '.']

# Then I tag it with another so it survives multiple builds..
- name: 'gcr.io/cloud-builders/docker'
  id: Tag latest to vVERSION
  args:
    - 'tag'
    - "${GCP_REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${APP_NAME}:latest"
#    - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${APP_NAME}:latest"
#    - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${APP_NAME}:sha-$SHORT_SHA"
  env:
  - 'RAILS_MASTER_KEY=$_RAILS_MASTER_KEY'

- name: 'gcr.io/cloud-builders/docker'
  id: Tag from SHA to VERSION - proviamo con Docker
  entrypoint: bash
  args:
  - bin/autotag.sh
  env:
  - 'PROJECT_ID=$PROJECT_ID'



# # deploys to cloud run: https://cloud.google.com/build/docs/deploying-builds/deploy-cloud-run
# - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#   entrypoint: gcloud
#   args:
#   - 'run'
#   - 'deploy'
#   - 'myapp-latest'
#   - '--image'
#   # TODO(ricc): check in the future whsat works best: tag to latest vs to specific SHA.
#   # "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${APP_NAME}-cb:sha-$SHORT_SHA"
#   - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${APP_NAME}-cb:latest"
#   - '--region'
#   - "${_REGION}"
#   - '--platform'
#   - 'managed'
#   - '--allow-unauthenticated'



- name: 'gcr.io/cloud-builders/gcloud'
  id: Push to Cloud run from POOR Env with DB stuff..
  entrypoint: bash
  args:
  - bin/cb-push-to-cloudrun.sh
  env:
  - 'PROJECT_ID=$PROJECT_ID'
  - 'RAILS_MASTER_KEY=$_RAILS_MASTER_KEY'
  - 'DATABASE_HOST=$_DATABASE_HOST'
  - 'DATABASE_NAME=$_DATABASE_NAME'
  - 'DATABASE_USER=$_DATABASE_USER'
  - 'DATABASE_PASS=$_DATABASE_PASS'
#  - 'GCP_REGION=$GCP_REGION'
#  - 'REGION=$REGION'

